@inject CultureService CultureService
@using System.Globalization

<div class="culture-selector">
    <RadzenDropDown TValue="string" Value=@(CultureDisplayName) Data=@cultureNames Change="OnChangeCulture" Style="width: 100%; max-width: 400px;" />
</div>

@code {
    private List<string> cultureNames = new List<string> { Resource.English, Resource.Spanish };
    private Dictionary<string, string> cultures = new Dictionary<string, string>
    {
        { Resource.English, "en-US" },
        { Resource.Spanish, "es-MX" },
    };

    private string CultureDisplayName => GetCultureName(CultureInfo.CurrentCulture);

    /// <summary>
    /// Handles culture change events by setting the application's culture to the selected value and reloading the application.
    /// </summary>
    /// <param name="cultureName">The name of the selected culture, of type <see cref="object"/>. Expected to be a key from the <c>cultures</c> dictionary.</param>
    private void OnChangeCulture(object cultureName)
    {
        CultureInfo newCulture = new CultureInfo(cultures[$"{cultureName}"]);
        CultureService.SetCulture(newCulture);
    }

    /// <summary>
    /// Gets the display name of the current culture.
    /// </summary>
    /// <param name="culture">The current culture info, of type <see cref="CultureInfo"/>.</param>
    /// <returns>The display name of the current culture, of type <see cref="string"/>.</returns>
    private string GetCultureName(CultureInfo culture)
    {
        return cultures.FirstOrDefault(x => x.Value == culture.Name).Key ?? Resource.English;
    }
}